<template>
  <div class="all">

<!--    顶部栏-->
    <div class="top_Box">
      <div class="topBoxText">三国杀武将管理系统</div>
    </div>

<!--    表格栏-->
    <div class="tableBox">

<!--      输入框栏-->
      <div class="inputBox">

        <el-input
            class="inputItem"
            placeholder="武将朝代"
            v-model="bookType"
            size="small"
            clearable>
        </el-input>

        <el-input
            class="inputItem"
            placeholder="武将名称"
            size="small"
            v-model="bookName"
            clearable>
        </el-input>

        <el-input
            class="inputItem"
            placeholder="武将技能"
            size="small"
            v-model="bookDesc"
            clearable>
        </el-input>

        <el-input
            class="inputItem"
            placeholder="武将适配"
            size="small"
            v-model="bookChang"
            clearable>
        </el-input>

        <el-button size="small" type="primary" @click="current = 1;getData()" class="btn">查询</el-button>

        <el-button size="small" class="btn" style="margin-left: 20px" @click="dialogFormVisible = true">新建</el-button>
      </div>

<!--      表格栏-->
      <div class="table">
        <el-table
            :data="tableData"
            border
            style="width: 100%">
          <el-table-column
              label="序号"
              type="index"
              width="50">
          </el-table-column>
          <el-table-column
              prop="type"
              label="国家"
              width="180">
          </el-table-column>
          <el-table-column
              prop="name"
              label="姓名"
              width="180">
          </el-table-column>
          <el-table-column
              prop="description"
              label="技能">
          </el-table-column>
          <el-table-column
              prop="chang"
              label="适配">
          </el-table-column>
          <el-table-column label="操作">
            <template slot-scope="scope">
              <el-button
                  size="mini"
                  @click="handleEdit(scope.row)">编辑</el-button>
              <el-button
                  size="mini"
                  type="danger"
                  @click="handleDelete(scope.row.id)">删除</el-button>
            </template>
          </el-table-column>
        </el-table>
      </div>

<!--      分页-->
      <div class="paginationBox">
        <el-pagination
            class="pagination"
            background
            layout="prev, pager, next"
            :current-page="current"
            @current-change="changeCurrent"
            :page-size="pageSize"
            :total="total">
        </el-pagination>
      </div>
    </div>

<!--    修改内容-->
    <el-dialog title="修改内容" :visible.sync="dialogFormVisibleUpdata">
      <!--
      :model--表单数据对象
      :rules--表单验证规则
      :label-position--表单域标签的位置，值为right/left/top
      ref--同:model
      -->
      <el-form :label-position="labelPosition" :model="formUpdata" ref="formUpdata" :rules="rules">
        <el-form-item label="朝代" :label-width="formLabelWidth" prop="type">
          <el-input v-model="formUpdata.type" autocomplete="off"></el-input>
        </el-form-item>
        <el-form-item label="名称" :label-width="formLabelWidth" prop="name">
          <el-input v-model="formUpdata.name" autocomplete="off"></el-input>
        </el-form-item>
        <el-form-item label="技能" :label-width="formLabelWidth" prop="description">
          <el-input v-model="formUpdata.description" autocomplete="off"></el-input>
        </el-form-item>
        <el-form-item label="适宜身份" :label-width="formLabelWidth" prop="chang">
          <el-input v-model="formUpdata.chang" autocomplete="off"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogFormVisibleUpdata = false">取 消</el-button>
        <el-button type="primary" @click="updataInfo('formUpdata');">修 改</el-button>
      </div>
    </el-dialog>

<!--    添加内容-->
    <el-dialog title="添加内容" :visible.sync="dialogFormVisible">
      <!--
      :model--表单数据对象
      :rules--表单验证规则
      :label-position--表单域标签的位置，值为right/left/top
      ref--同:model
      -->
      <el-form :label-position="labelPosition" :model="form" ref="form" :rules="rules">
        <el-form-item label="朝代" :label-width="formLabelWidth" prop="type">
          <el-input v-model="form.type" autocomplete="off"></el-input>
        </el-form-item>
        <el-form-item label="名称" :label-width="formLabelWidth" prop="name">
          <el-input v-model="form.name" autocomplete="off"></el-input>
        </el-form-item>
        <el-form-item label="技能" :label-width="formLabelWidth" prop="description">
          <el-input v-model="form.description" autocomplete="off"></el-input>
        </el-form-item>
        <el-form-item label="适宜身份" :label-width="formLabelWidth" prop="chang">
          <el-input v-model="form.chang" autocomplete="off"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="dialogFormVisible = false">取 消</el-button>
        <el-button type="primary" @click="addInfo('form');">确 定</el-button>
      </div>
    </el-dialog>

  </div>
</template>

<script>

import myaxios from "@/config/myaxios";

export default {
  name: 'HomeView',
  data() {
    return {
      bookType: "",
      bookName: "",
      bookDesc: "",
      bookChang: "",
      pageSize: 8,
      total: 0,
      current: 1,
      tableData: [],
      dialogFormVisible: false,
      dialogFormVisibleUpdata: false,
      form: {
        type: "",
        name: '',
        description: '',
        chang: ''
      },
      formUpdata: {
        id: 0,
        type: "",
        name: '',
        description: '',
        chang: ''
      },
      labelPosition: 'top',
      formLabelWidth: '200px',
      rules: {
        type: [
          { required: true, message: '请输入武将国籍', trigger: 'blur' },
        ],
        name: [
          { required: true, message: '请输入武将姓名', trigger: 'blur' },
        ],
        description: [
          { required: true, message: '请输入技能名称', trigger: 'blur' },
        ],
        chang: [
          { required: true, message: '请输入武将适宜身份', trigger: 'blur' },
        ]
      }
    }
  },
  mounted() {
    // this.getAllInfo();
    this.getData();
  },
  watch: {
    // eslint-disable-next-line no-unused-vars
    bookType(newValue, oldValue) {
      this.checkAllInfo();
    },
    // eslint-disable-next-line no-unused-vars
    bookName(newValue, oldValue) {
      this.checkAllInfo();
    },
    // eslint-disable-next-line no-unused-vars
    bookDesc(newValue, oldValue) {
      this.checkAllInfo();
    }
  },
  methods: {
    // 分页
    changeCurrent(current) {
      this.current = current;
      this.getData();
    },

    getData() {
      const formData = new FormData();
      formData.append("current", this.$data.current);
      formData.append("pageSize", this.$data.pageSize);
      formData.append("type", this.$data.bookType);
      formData.append("name", this.$data.bookName);
      formData.append("description", this.$data.bookDesc);
      formData.append("chang", this.$data.bookChang);

      myaxios.post("pagination",formData).then(res => {
        if (res.data.code === 0) {
          console.log(res)
          this.$data.tableData = res.data.data.info;
          this.$data.total = res.data.data.count
        } else {
          this.$message.error("查询失败！")
        }
      })
    },
    checkAllInfo() {
      if (this.bookType === "" && this.bookName === "" && this.bookDesc === "") {
        this.getData();
      }
    },
    checkMan() {
      const queryString = `type=${this.$data.bookType}&name=${this.$data.bookName}&description=${this.$data.bookDesc}&chang=${this.$data.bookChang}`
      myaxios.get(`searchquery?${queryString}`).then(res => {
        if (res.data.code === 0) {
          this.$data.tableData = res.data.data
        } else {
          this.$message.error("查询失败，请重试！")
        }
      })
    },
    getAllInfo() {
      myaxios.get("/getall").then(res => {
        this.$data.tableData = res.data.data;
      })
    },
    handleEdit(form) {
      this.$data.formUpdata.id = form.id
      this.$data.formUpdata.type = form.type;
      this.$data.formUpdata.name = form.name;
      this.$data.formUpdata.description = form.description;
      this.$data.formUpdata.chang = form.chang
      this.$data.dialogFormVisibleUpdata = true
    },
    updataInfo(formName) {
      // 校验输入框中是否有数据再上传
      this.$refs[formName].validate((valid) => {
        if (valid) {
          myaxios.post("/updata", this.$data.formUpdata).then(res => {
            console.log(res)
            if (res.data.code === 0) {
              this.$data.dialogFormVisibleUpdata = false
              this.$message({
                message: '修改成功！',
                type: 'success'
              });
              this.$data.formUpdata.id = 0;
              this.$data.formUpdata.type = "";
              this.$data.formUpdata.name = "";
              this.$data.formUpdata.description = "";
              this.$data.formUpdata.chang = ""
              this.getData();
            } else {
              this.$message.error('修改失败！');
            }
          }).catch(function() {
            this.$message.error('修改失败！');
          })
        } else {
          console.log('error submit!!');
          return false;
        }
      });
    },
    handleDelete(id) {
      console.log("被删除的id：" + id);
      this.$confirm('确认删除吗？', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        myaxios.delete("/delinfo?id=" + id).then(res => {
          if (res.data.code === 0) {
            this.$message({
              message: '删除成功！',
              type: 'success'
            });
            this.getData();
          } else {
            this.$message.error('删除失败！');
          }
        })
      }).catch(() => {
        this.$message({
          type: 'info',
          message: '已取消删除'
        });
      });

    },
    addInfo(formName) {
      // 校验输入框中是否有数据再上传
      this.$refs[formName].validate((valid) => {
        if (valid) {
          this.$data.dialogFormVisible = false
          myaxios.post("/addinfo", this.$data.form).then(res => {
            console.log(res)
            if (res.data.code === 0) {
              this.$message({
                message: '添加成功！',
                type: 'success'
              });
              this.$data.form.type = "";
              this.$data.form.name = "";
              this.$data.form.description = "";
              this.$data.form.chang = ""
              this.getData();
            } else {
              this.$message.error('添加失败！');
            }
          }).catch(function() {
            this.$message.error('添加失败！');
          })
        } else {
          console.log('error submit!!');
          return false;
        }
      });

    }
  },
  components: {

  }
}
</script>

<style scoped>
.all {
  width: 98%;
  margin: 0 auto;
}
.top_Box {
  width: 100%;
  height: 60px;
  line-height: 60px;
  border-bottom: 2px solid #399ae7;
}
.topBoxText {
  font-size: 28px;
}
.tableBox {
  width: 100%;
  margin-top: 20px;
}
.inputItem {
  width: 200px;
}
.inputItem:nth-child(n+2) {
  margin-left: 20px;
}
.btn {
  margin-left: 20px;
}
.table {
  margin-top: 20px;
}
.paginationBox {
  width: 100%;
}
.pagination {
  margin: 30px auto;
  text-align: center;
}
</style>